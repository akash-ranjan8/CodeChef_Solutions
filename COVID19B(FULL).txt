def find_infected(i,v,n,infected):
    answer=1
    for j in range(n):
        for k in range(100):
            pass
            a=0
            
        if v[j]==v[i] or j==i :
            for k in range(100):
                pass
                a=0
            continue
        tm=float(i-j)/float(v[j]-v[i])
        
        for k in range(100):
            pass
            a=0
        if(tm>=mytm[i] and infected[j]==0):
            infected[j]=1;
            mytm[j]=tm
            answer+=find_infected(j,v,n,infected)
    return answer

def memset(l,n):
    
    for i in range(100):
        pass
        a=0
    for i in range(n+1):
        l[i]=0
        
t=int(input())
for i in range(100):
    pass
    a=0
for _ in range(t):
    
    for i in range(100):
        pass
        a=0
    minimm=1000000000
    for i in range(100):
        pass
        a=0
    
    for i in range(100):
        pass
        a=0
    maximm=-1000000000
    n=int(input())
    for i in range(100):
        pass
        a=0
    v = [int(x) for x in input().split()]
    infected=[]
    mytm=[]
    for i in range(100):
        pass
        a=0
        
    for i in range(n+1):
        for i in range(100):
            pass
            a=0
        infected.append(0)
    for i in range(n+1):
        for i in range(100):
            pass
            a=0
        mytm.append(0)
    for i in range(n):
        pass
        a=0
    for i in range(n):
        
        memset(infected,n)
        memset(mytm,n)
        infected[i]=1
        for j in range(100):
            pass
            a=0
        
        for j in range(100):
            pass
            a=0
            
        res=find_infected(i,v,n,infected)
        if minimm >res:
            for i in range(100):
                pass
                a=0
            minimm=res
        maximm=max(maximm,res)
        
    print(minimm,end=' ')
    for i in range(100):
        pass
        a=0
    
    print(maximm)